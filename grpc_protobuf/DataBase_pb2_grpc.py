# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import DataBase_pb2 as DataBase__pb2

GRPC_GENERATED_VERSION = '1.66.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in DataBase_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class DataBaseStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitDataBase = channel.unary_unary(
                '/DataBase/InitDataBase',
                request_serializer=DataBase__pb2.NullMessage.SerializeToString,
                response_deserializer=DataBase__pb2.InitResult.FromString,
                _registered_method=True)
        self.GetDisk = channel.unary_unary(
                '/DataBase/GetDisk',
                request_serializer=DataBase__pb2.GetDiskRequest.SerializeToString,
                response_deserializer=DataBase__pb2.GetDiskResult.FromString,
                _registered_method=True)
        self.GetVolume = channel.unary_unary(
                '/DataBase/GetVolume',
                request_serializer=DataBase__pb2.GetVolumeRequest.SerializeToString,
                response_deserializer=DataBase__pb2.GetVolumeResult.FromString,
                _registered_method=True)
        self.AddPhysicalStorage = channel.unary_unary(
                '/DataBase/AddPhysicalStorage',
                request_serializer=DataBase__pb2.AddDiskRequest.SerializeToString,
                response_deserializer=DataBase__pb2.AddDiskResult.FromString,
                _registered_method=True)
        self.AddVolume = channel.unary_unary(
                '/DataBase/AddVolume',
                request_serializer=DataBase__pb2.AddVolumeRequest.SerializeToString,
                response_deserializer=DataBase__pb2.AddVolumeResult.FromString,
                _registered_method=True)
        self.ResetDisk = channel.unary_unary(
                '/DataBase/ResetDisk',
                request_serializer=DataBase__pb2.ResetDiskRequest.SerializeToString,
                response_deserializer=DataBase__pb2.ResetDiskResult.FromString,
                _registered_method=True)
        self.ResetVolume = channel.unary_unary(
                '/DataBase/ResetVolume',
                request_serializer=DataBase__pb2.ResetVolumeRequest.SerializeToString,
                response_deserializer=DataBase__pb2.ResetVolumeResult.FromString,
                _registered_method=True)


class DataBaseServicer(object):
    """Missing associated documentation comment in .proto file."""

    def InitDataBase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDisk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddPhysicalStorage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetDisk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataBaseServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InitDataBase': grpc.unary_unary_rpc_method_handler(
                    servicer.InitDataBase,
                    request_deserializer=DataBase__pb2.NullMessage.FromString,
                    response_serializer=DataBase__pb2.InitResult.SerializeToString,
            ),
            'GetDisk': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDisk,
                    request_deserializer=DataBase__pb2.GetDiskRequest.FromString,
                    response_serializer=DataBase__pb2.GetDiskResult.SerializeToString,
            ),
            'GetVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVolume,
                    request_deserializer=DataBase__pb2.GetVolumeRequest.FromString,
                    response_serializer=DataBase__pb2.GetVolumeResult.SerializeToString,
            ),
            'AddPhysicalStorage': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPhysicalStorage,
                    request_deserializer=DataBase__pb2.AddDiskRequest.FromString,
                    response_serializer=DataBase__pb2.AddDiskResult.SerializeToString,
            ),
            'AddVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.AddVolume,
                    request_deserializer=DataBase__pb2.AddVolumeRequest.FromString,
                    response_serializer=DataBase__pb2.AddVolumeResult.SerializeToString,
            ),
            'ResetDisk': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetDisk,
                    request_deserializer=DataBase__pb2.ResetDiskRequest.FromString,
                    response_serializer=DataBase__pb2.ResetDiskResult.SerializeToString,
            ),
            'ResetVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetVolume,
                    request_deserializer=DataBase__pb2.ResetVolumeRequest.FromString,
                    response_serializer=DataBase__pb2.ResetVolumeResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'DataBase', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('DataBase', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class DataBase(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def InitDataBase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DataBase/InitDataBase',
            DataBase__pb2.NullMessage.SerializeToString,
            DataBase__pb2.InitResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDisk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DataBase/GetDisk',
            DataBase__pb2.GetDiskRequest.SerializeToString,
            DataBase__pb2.GetDiskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DataBase/GetVolume',
            DataBase__pb2.GetVolumeRequest.SerializeToString,
            DataBase__pb2.GetVolumeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddPhysicalStorage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DataBase/AddPhysicalStorage',
            DataBase__pb2.AddDiskRequest.SerializeToString,
            DataBase__pb2.AddDiskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DataBase/AddVolume',
            DataBase__pb2.AddVolumeRequest.SerializeToString,
            DataBase__pb2.AddVolumeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResetDisk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DataBase/ResetDisk',
            DataBase__pb2.ResetDiskRequest.SerializeToString,
            DataBase__pb2.ResetDiskResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResetVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DataBase/ResetVolume',
            DataBase__pb2.ResetVolumeRequest.SerializeToString,
            DataBase__pb2.ResetVolumeResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
