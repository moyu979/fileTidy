# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import DataBase_pb2 as DataBase__pb2


class DataBaseStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitDataBase = channel.unary_unary(
                '/DataBase/InitDataBase',
                request_serializer=DataBase__pb2.InitRequest.SerializeToString,
                response_deserializer=DataBase__pb2.InitResult.FromString,
                )
        self.GetDisk = channel.unary_unary(
                '/DataBase/GetDisk',
                request_serializer=DataBase__pb2.GetDiskRequest.SerializeToString,
                response_deserializer=DataBase__pb2.GetDiskResult.FromString,
                )
        self.GetVolume = channel.unary_unary(
                '/DataBase/GetVolume',
                request_serializer=DataBase__pb2.GetVolumeRequest.SerializeToString,
                response_deserializer=DataBase__pb2.GetVolumeResult.FromString,
                )
        self.AddDisk = channel.unary_unary(
                '/DataBase/AddDisk',
                request_serializer=DataBase__pb2.AddDiskRequest.SerializeToString,
                response_deserializer=DataBase__pb2.AddDiskResult.FromString,
                )
        self.AddVolume = channel.unary_unary(
                '/DataBase/AddVolume',
                request_serializer=DataBase__pb2.AddVolumeRequest.SerializeToString,
                response_deserializer=DataBase__pb2.AddVolumeResult.FromString,
                )
        self.UpdateDisk = channel.unary_unary(
                '/DataBase/UpdateDisk',
                request_serializer=DataBase__pb2.UpdateDiskRequest.SerializeToString,
                response_deserializer=DataBase__pb2.UpdateDiskResult.FromString,
                )
        self.UpdateVolume = channel.unary_unary(
                '/DataBase/UpdateVolume',
                request_serializer=DataBase__pb2.UpdateVolumeRequest.SerializeToString,
                response_deserializer=DataBase__pb2.UpdateVolumeResult.FromString,
                )


class DataBaseServicer(object):
    """Missing associated documentation comment in .proto file."""

    def InitDataBase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDisk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddDisk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDisk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataBaseServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InitDataBase': grpc.unary_unary_rpc_method_handler(
                    servicer.InitDataBase,
                    request_deserializer=DataBase__pb2.InitRequest.FromString,
                    response_serializer=DataBase__pb2.InitResult.SerializeToString,
            ),
            'GetDisk': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDisk,
                    request_deserializer=DataBase__pb2.GetDiskRequest.FromString,
                    response_serializer=DataBase__pb2.GetDiskResult.SerializeToString,
            ),
            'GetVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVolume,
                    request_deserializer=DataBase__pb2.GetVolumeRequest.FromString,
                    response_serializer=DataBase__pb2.GetVolumeResult.SerializeToString,
            ),
            'AddDisk': grpc.unary_unary_rpc_method_handler(
                    servicer.AddDisk,
                    request_deserializer=DataBase__pb2.AddDiskRequest.FromString,
                    response_serializer=DataBase__pb2.AddDiskResult.SerializeToString,
            ),
            'AddVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.AddVolume,
                    request_deserializer=DataBase__pb2.AddVolumeRequest.FromString,
                    response_serializer=DataBase__pb2.AddVolumeResult.SerializeToString,
            ),
            'UpdateDisk': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDisk,
                    request_deserializer=DataBase__pb2.UpdateDiskRequest.FromString,
                    response_serializer=DataBase__pb2.UpdateDiskResult.SerializeToString,
            ),
            'UpdateVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateVolume,
                    request_deserializer=DataBase__pb2.UpdateVolumeRequest.FromString,
                    response_serializer=DataBase__pb2.UpdateVolumeResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'DataBase', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataBase(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def InitDataBase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataBase/InitDataBase',
            DataBase__pb2.InitRequest.SerializeToString,
            DataBase__pb2.InitResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDisk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataBase/GetDisk',
            DataBase__pb2.GetDiskRequest.SerializeToString,
            DataBase__pb2.GetDiskResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataBase/GetVolume',
            DataBase__pb2.GetVolumeRequest.SerializeToString,
            DataBase__pb2.GetVolumeResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddDisk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataBase/AddDisk',
            DataBase__pb2.AddDiskRequest.SerializeToString,
            DataBase__pb2.AddDiskResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataBase/AddVolume',
            DataBase__pb2.AddVolumeRequest.SerializeToString,
            DataBase__pb2.AddVolumeResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateDisk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataBase/UpdateDisk',
            DataBase__pb2.UpdateDiskRequest.SerializeToString,
            DataBase__pb2.UpdateDiskResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataBase/UpdateVolume',
            DataBase__pb2.UpdateVolumeRequest.SerializeToString,
            DataBase__pb2.UpdateVolumeResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
